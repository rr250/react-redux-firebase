{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/project/ProjectSummary.js","components/project/ProjectList.js","components/dashboard/Dashboard.js","components/project/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/project/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","dispath","getState","_ref2","getFirebase","auth","then","type","props","console","log","profile","react_default","a","createElement","className","NavLink","to","onClick","initials","SignedOutLinks","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","project_ProjectSummary","Dashboard","_this$props","this","project_ProjectList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","_Component","_getPrototypeOf2","_this","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","email","password","handleChange","e","setState","defineProperty","target","value","handleSubmit","preventDefault","signIn","inherits","createClass","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","undefined","action","messsage","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.13cc805f.chunk.js","sourcesContent":["import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {signOut} from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n    console.log(props.profile)\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/create'>NewProject</NavLink></li>\r\n            <li><a onClick={props.signOut}>LogOut</a></li>\r\n            <li><NavLink to='/' className='btn btn-floating pink lighten-1'>{props.profile.initials}</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n  const mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        signOut: ()=> dispatch(signOut())\r\n    }\r\n  }\r\n  \r\n  export default connect(null,mapDispatchToProps)(SignedInLinks);","export const signIn=(credentials)=>{\r\n    return(dispath, getState,{getFirebase})=>{\r\n        const firebase=getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(()=>{\r\n            dispath({type:'LOGIN_SUCCESS'})\r\n        }).catch((err)=>{\r\n            dispath({type:'LOGIN_ERROR',err})\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut=()=>{\r\n    return(dispath,getState,{getFirebase})=>{\r\n        const firebase=getFirebase();\r\n        \r\n        firebase.auth().signOut().then(()=>{\r\n            dispath({type:'SIGNOUT_SUCCESS'});\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser)=>{\r\n    return(dispatch, getState,{getFirebase, getFirestore})=>{\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0]+newUser.lastName[0]\r\n            })\r\n        }).then(()=>{\r\n            dispatch({type: 'SIGNUP_SUCCESS'})\r\n        }).catch(err=>{\r\n            dispatch({type:'SIGNUP_ERROR', err})\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>SignUp</NavLink></li>\r\n            <li><NavLink to='/signin'>LogIn</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport SignedInLinks from'./SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport {connect} from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n    const {auth,profile}=props;\r\n    console.log(auth);\r\n    const links=auth.uid? <SignedInLinks profile={profile} />:<SignedOutLinks/>;\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\">Mario Plan</Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    console.log(state);\r\n    return{\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n    const {notifications}=props;\r\n    return(\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        {notifications && notifications.map(item=>{\r\n                            return(\r\n                                <li key={item.id}>\r\n                                    <span className=\"pink-text\">{item.user}</span>\r\n                                    <span> {item.content}</span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications;","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return (\r\n      <div className=\"project-list section\">\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default ProjectSummary\r\n","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return (\r\n      <div className=\"project-list section\">\r\n        {projects && projects.map(project=>{\r\n          return(\r\n            <Link to={'/project/' + project.id} key={project.id}>\r\n              <ProjectSummary project={project}/>\r\n            </Link>  \r\n          )\r\n        })}         \r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default ProjectList\r\n","import React, { Component } from 'react';\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../project/ProjectList'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass Dashboard extends Component{\r\n    render(){\r\n        \r\n        const { projects,auth,notifications }=this.props;\r\n        if(!auth.uid)\r\n            return<Redirect to='/signin'/>    \r\n        return(\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications}/>\r\n                    </div>\r\n                </div>\r\n            </div>  \r\n        )  \r\n    }\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    console.log(state);\r\n    return{\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([{collection: 'projects',orderBy:['createdAt','desc']}, {collection: 'notifications', limit:3, orderBy:['time','desc']}])\r\n)(Dashboard)","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n  const {project,auth}=props; \r\n        if(!auth.uid)\r\n            return<Redirect to='/signin'/>     \r\n  if(project){\r\n    return(\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n              <div className=\"card-title\">{project.title}</div>\r\n              <p>{project.content}</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n              <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n              <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading project...</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps=(state,ownProps)=>{\r\n  const id = ownProps.match.params.id;\r\n  const projects=state.firestore.data.projects;\r\n  const project=projects ? projects[id] : null\r\n  return{\r\n    project: project,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{collection:'projects'}])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {signIn} from '../../store/actions/authActions'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nexport class SignIn extends Component {\r\n    state={\r\n      email: '',\r\n      password: ''\r\n    }\r\n  handleChange=(e)=>{\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  }  \r\n  handleSubmit=(e)=>{\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n  }  \r\n  \r\n  render() {\r\n    const { authError,auth }=this.props;\r\n    if(auth.uid)\r\n            return<Redirect to='/'/>\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n            <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input type=\"email\" id=\"email\" onChange={this.handleChange}/>  \r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input type=\"password\" id=\"password\" onChange={this.handleChange}/>  \r\n            </div>\r\n            <div className=\"input-field\">\r\n              <button className=\"btn pink lighten-1 z-depth-0\">Login</button>  \r\n              <div className=\"red-text center\">\r\n                {authError ? <p> {authError} </p> : null}\r\n              </div>\r\n            </div>\r\n        </form>  \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n  return{\r\n      authError: state.auth.authError,\r\n      auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n  return{\r\n      signIn: (creds)=> dispatch(signIn(creds))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {signUp} from '../../store/actions/authActions'\r\n\r\nexport class SignUp extends Component {\r\n    state={\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      password: ''\r\n    }\r\n  handleChange=(e)=>{\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  }  \r\n  handleSubmit=(e)=>{\r\n    e.preventDefault();\r\n    console.log(this.state);\r\n    this.props.signUp(this.state);\r\n  }  \r\n  \r\n  render() {\r\n    const { auth, authError }=this.props;\r\n    if(auth.uid)\r\n            return<Redirect to='/'/>\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n            <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"firstName\">First Name</label>\r\n              <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>  \r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"lastnNme\">Last Name</label>\r\n              <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>  \r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input type=\"email\" id=\"email\" onChange={this.handleChange}/>  \r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input type=\"password\" id=\"password\" onChange={this.handleChange}/>  \r\n            </div>\r\n            <div className=\"input-field\">\r\n              <button className=\"btn pink lighten-1 z-depth-0\">SignUp</button>  \r\n              <div className=\"red-text center\">\r\n                { authError ? <p>{ authError }</p> : null}\r\n              </div>\r\n            </div>\r\n        </form>  \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n  console.log(state);\r\n  return{\r\n      auth: state.firebase.auth,\r\n      authError: state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n  return{\r\n      signUp: (newUser)=> dispatch(signUp(newUser))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp);","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {createProject} from '../../store/actions/projectActions'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nexport class CreateProject extends Component {\r\n    state={\r\n      title:'',\r\n      content:''\r\n    }\r\n  handleChange=(e)=>{\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  }  \r\n  handleSubmit=(e)=>{\r\n    e.preventDefault();\r\n    this.props.createProject(this.state)\r\n    this.props.history.push('/')\r\n  }  \r\n  \r\n  render() {\r\n    const { auth }=this.props;\r\n        if(!auth.uid)\r\n            return<Redirect to='/signin'/>    \r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n            <h5 className=\"grey-text text-darken-3\">Create new project</h5>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"title\">Title</label>\r\n              <input type=\"text\" id=\"title\" onChange={this.handleChange}/>  \r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"content\">Project Content</label>\r\n              <textarea type=\"text\" id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}/>  \r\n            </div>\r\n            <div className=\"input-field\">\r\n              <button className=\"btn pink lighten-1 z-depth-0\">Create</button>  \r\n            </div>\r\n        </form>  \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n  console.log(state);\r\n  return{\r\n      auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchTOProps=(dispatch)=>{\r\n  return{\r\n    createProject:(project)=>dispatch(createProject(project))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchTOProps)(CreateProject)\r\n","export const createProject=(project)=>{\r\n    return(dispath, getState, {getFirebase, getFirestore})=>{\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName:profile.lastName,\r\n            authorId:authorId,\r\n            createdAt:new Date()\r\n        }).then(()=>{\r\n            dispath({type: 'CREATE_PROJECT', project});\r\n        }).catch((err)=>{\r\n            dispath({type: 'CREATE_PROJECT_ERROR', err});\r\n        })\r\n        \r\n    }\r\n};","import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from \"./components/project/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/project/CreateProject'\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/create\" component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState={\r\n    authError:null\r\n}\r\n\r\nconst authReducer=(state= initState, action)=>{\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error')\r\n            return {\r\n                ...state,\r\n                authError: 'Login Failed'\r\n            };\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success')\r\n            return {\r\n                ...state,\r\n                authError: 'null'\r\n            };\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('sign out');\r\n            return state; \r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            } \r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error');\r\n            return{\r\n                ...state,\r\n                authError: action.err.messsage\r\n            }     \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer","const initState={\r\n    projects: [\r\n        {id: '1', title: 'help me find peach', content: 'blah blah blah'},\r\n        {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\r\n        {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\r\n      ]\r\n}\r\n\r\nconst projectReducer=(state= initState, action)=>{\r\n    switch(action.type){\r\n        case 'CREATE_PROJECT':\r\n            console.log(action.project)\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log(action.err)\r\n            return state;    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport {combineReducers} from 'redux'\r\nimport {firestoreReducer} from 'redux-firestore'\r\nimport {firebaseReducer} from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'         \r\n\r\n\r\nvar config = {\r\n    apiKey: \"AIzaSyBNaJoopMrbQtZYOHu5kwV1L27Ivgt-eh4\",\r\n    authDomain: \"react-redux-firebase-d11f2.firebaseapp.com\",\r\n    databaseURL: \"https://react-redux-firebase-d11f2.firebaseio.com\",\r\n    projectId: \"react-redux-firebase-d11f2\",\r\n    storageBucket: \"react-redux-firebase-d11f2.appspot.com\",\r\n    messagingSenderId: \"757675809758\"\r\n  };\r\n  firebase.initializeApp(config);\r\n  firebase.firestore().settings({timestampsInSnapshots: true});\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\nimport {reduxFirestore, getFirestore} from 'redux-firestore'\nimport {reactReduxFirebase, getFirebase} from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\n\nconst store = createStore(rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady:true})\n    )\n);\n\nstore.firebaseAuthIsReady.then(()=>{\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n})\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}